//
// DO NOT EDIT THIS FILE.Generated using AndroidAnnotations 3.3.2.
//  You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.xtone.game87873.section.gift;

import android.app.Activity;
import android.content.Context;
import android.os.Build.VERSION;
import android.os.Build.VERSION_CODES;
import android.os.Bundle;
import android.support.v4.app.ActivityCompat;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import com.xtone.game87873.R.id;
import com.xtone.game87873.R.layout;
import org.androidannotations.api.SdkVersionHelper;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class GiftDetailActivity_
    extends GiftDetailActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.activity_gift_detail);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static GiftDetailActivity_.IntentBuilder_ intent(Context context) {
        return new GiftDetailActivity_.IntentBuilder_(context);
    }

    public static GiftDetailActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new GiftDetailActivity_.IntentBuilder_(fragment);
    }

    public static GiftDetailActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new GiftDetailActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        tv_alreadyTakeCount = ((TextView) hasViews.findViewById(id.tv_alreadyTakeCount));
        tv_applicablePlatform = ((TextView) hasViews.findViewById(id.tv_applicablePlatform));
        tv_residue = ((TextView) hasViews.findViewById(id.tv_residue));
        tv_residueTime = ((TextView) hasViews.findViewById(id.tv_residueTime));
        ll_residueTime = ((LinearLayout) hasViews.findViewById(id.ll_residueTime));
        iv_headRight = ((ImageView) hasViews.findViewById(id.iv_headRight));
        tv_giftDetail = ((TextView) hasViews.findViewById(id.tv_giftDetail));
        scrollView = ((ScrollView) hasViews.findViewById(id.scrollView));
        tv_headTitle = ((TextView) hasViews.findViewById(id.tv_headTitle));
        tv_residueCount = ((TextView) hasViews.findViewById(id.tv_residueCount));
        tv_residueTimeL = ((TextView) hasViews.findViewById(id.tv_residueTimeL));
        tv_part = ((TextView) hasViews.findViewById(id.tv_part));
        ll_count = ((LinearLayout) hasViews.findViewById(id.ll_count));
        btn_download = ((Button) hasViews.findViewById(id.btn_download));
        ll_container = ((LinearLayout) hasViews.findViewById(id.ll_container));
        iv_headLeft = ((ImageView) hasViews.findViewById(id.iv_headLeft));
        tv_applicableValidity = ((TextView) hasViews.findViewById(id.tv_applicableValidity));
        tv_giftName = ((TextView) hasViews.findViewById(id.tv_giftName));
        iv_gameIcon = ((ImageView) hasViews.findViewById(id.iv_gameIcon));
        tv_giftDestription = ((TextView) hasViews.findViewById(id.tv_giftDestription));
        btn_take = ((Button) hasViews.findViewById(id.btn_take));
        tv_giftRemark = ((TextView) hasViews.findViewById(id.tv_giftRemark));
        btn_copy = ((Button) hasViews.findViewById(id.btn_copy));
        if (btn_download!= null) {
            btn_download.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    GiftDetailActivity_.this.downloadClick();
                }

            }
            );
        }
        if (btn_take!= null) {
            btn_take.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    GiftDetailActivity_.this.takeClick();
                }

            }
            );
        }
        if (tv_headTitle!= null) {
            tv_headTitle.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    GiftDetailActivity_.this.titleClick();
                }

            }
            );
        }
        if (btn_copy!= null) {
            btn_copy.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    GiftDetailActivity_.this.copyClick();
                }

            }
            );
        }
        if (iv_headRight!= null) {
            iv_headRight.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    GiftDetailActivity_.this.shareClick();
                }

            }
            );
        }
        if (iv_headLeft!= null) {
            iv_headLeft.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    GiftDetailActivity_.this.backClick();
                }

            }
            );
        }
        if (iv_gameIcon!= null) {
            iv_gameIcon.setOnClickListener(new OnClickListener() {


                @Override
                public void onClick(View view) {
                    GiftDetailActivity_.this.gameIconClick();
                }

            }
            );
        }
        afterViews();
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<GiftDetailActivity_.IntentBuilder_>
    {

        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, GiftDetailActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), GiftDetailActivity_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            super(fragment.getActivity(), GiftDetailActivity_.class);
            fragmentSupport_ = fragment;
        }

        @Override
        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
                        fragment_.startActivityForResult(intent, requestCode, lastOptions);
                    } else {
                        fragment_.startActivityForResult(intent, requestCode);
                    }
                } else {
                    if (context instanceof Activity) {
                        Activity activity = ((Activity) context);
                        ActivityCompat.startActivityForResult(activity, intent, requestCode, lastOptions);
                    } else {
                        if (VERSION.SDK_INT >= VERSION_CODES.JELLY_BEAN) {
                            context.startActivity(intent, lastOptions);
                        } else {
                            context.startActivity(intent);
                        }
                    }
                }
            }
        }

    }

}
